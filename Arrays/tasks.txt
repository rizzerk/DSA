Beginner Level (Static Arrays)
1. Find Maximum Element
Difficulty: Easy
Problem: Given an array of integers, find the maximum element.
Input: [3, 1, 4, 1, 5, 9, 2, 6]
Output: 9
Skills: Basic traversal, comparison

2. Reverse Array
Difficulty: Easy
Problem: Reverse an array in-place without using extra space.
Input: [1, 2, 3, 4, 5]
Output: [5, 4, 3, 2, 1]
Skills: Two pointers, in-place manipulation


3. Second Largest Element
Difficulty: Easy
Problem: Find the second largest element in an array. Return -1 if it doesn't exist.
Input: [1, 2, 3, 4, 5]
Output: 4
Skills: Single pass algorithm, edge case handling


4. Count Frequency
Difficulty: Easy
Problem: Count frequency of each element in an array.
Input: [1, 2, 2, 3, 3, 3]
Output: {1: 1, 2: 2, 3: 3}
Skills: Hash maps, counting


Intermediate Level (Array Algorithms)
5. Two Sum
Difficulty: Medium
Problem: Find two numbers in array that add up to target sum.
Input: nums = [2, 7, 11, 15], target = 9
Output: [0, 1] (indices of 2 and 7)
Skills: Hash maps, optimal time complexity


6. Maximum Subarray (Kadane's Algorithm)
Difficulty: Medium
Problem: Find the contiguous subarray with the largest sum.
Input: [-2, 1, -3, 4, -1, 2, 1, -5, 4]
Output: 6 (subarray [4, -1, 2, 1])
Skills: Dynamic programming, Kadane's algorithm


7. Move Zeros
Difficulty: Medium
Problem: Move all zeros to the end while maintaining relative order of non-zero elements.
Input: [0, 1, 0, 3, 12]
Output: [1, 3, 12, 0, 0]
Skills: Two pointers, in-place operations


8. Rotate Array
Difficulty: Medium
Problem: Rotate array to the right by k steps.
Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Skills: Array reversal, modular arithmetic


9. Container With Most Water
Difficulty: Medium
Problem: Find two lines that together with x-axis forms container holding most water.
Input: [1,8,6,2,5,4,8,3,7]
Output: 49
Skills: Two pointers, greedy approach